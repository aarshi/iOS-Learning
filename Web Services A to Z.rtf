{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Calibri;\f1\fnil\fcharset0 Calibri-Light;\f2\fswiss\fcharset0 ArialMT;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red255\green142\blue147;\red28\green28\blue28;\red10\green0\blue109;
\red255\green83\blue8;\red52\green184\blue255;\red255\green16\blue145;\red147\green68\blue70;\red247\green247\blue247;
\red33\green47\blue63;\red43\green132\blue210;\red201\green113\blue0;\red234\green219\blue125;\red246\green246\blue255;
\red132\green109\blue255;\red83\green83\blue83;\red38\green38\blue38;\red11\green82\blue169;\red23\green55\blue83;
\red137\green152\blue14;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww24920\viewh14640\viewkind0
\deftab720
\pard\pardeftab720\sl448

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 Web service
\b0 \expnd0\expndtw0\kerning0
 
\fs32 \cf3 \expnd0\expndtw0\kerning0
\ulnone \
\
A 
\b Web service
\b0  is a method of communication between two electronic devices over a {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Computer_network"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
network}}. It is a software function provided at a network address over the Web with the service 
\i \expnd0\expndtw0\kerning0
always on
\i0 \expnd0\expndtw0\kerning0
 as in the concept of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Utility_computing"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
utility computing}}.\
\
\pard\pardeftab720\sl448\sa140
\cf3 \expnd0\expndtw0\kerning0
We can identify two major classes of Web services:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls1\ilvl0
\i \cf4 \kerning1\expnd0\expndtw0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer"}}{\fldrslt \expnd0\expndtw0\kerning0
REST}}\cf3 \expnd0\expndtw0\kerning0
-compliant Web services
\i0 \expnd0\expndtw0\kerning0
, in which the primary purpose of the service is to manipulate representations of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Web_resource"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Web resources}} using a uniform set of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Stateless_protocol"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
stateless}} operations.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls1\ilvl0
\i \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Arbitrary Web services
\i0 \expnd0\expndtw0\kerning0
, in which the service may expose an arbitrary set of operations.{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Web_service#cite_note-2"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\super [2]}}\
\pard\pardeftab720\sl448

\b \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl560\sa108

\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************\
\cf6 \ul \ulc6 \
Stateless protocol
\b0\fs32 \ulnone \
\pard\pardeftab720\sl448

\b \cf3 \expnd0\expndtw0\kerning0
\

\b0 In computing, a 
\b stateless protocol
\b0  is a {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Communications_protocol"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
communications protocol}} that treats each request as an independent transaction that is unrelated to any previous request so that the communication consists of independent pairs of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Request%E2%80%93response"}}{\fldrslt 
\i \cf4 \expnd0\expndtw0\kerning0
request and response}}. A stateless protocol does not require the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Server_(computing)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
server}} to retain {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Session_(computer_science)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
session}} information or status about each communications partner for the duration of multiple requests. In contrast, a protocol which requires keeping of the internal state on the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Server_(computing)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
server}} is known as a {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Stateful"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
stateful}} protocol.
\b \
\
\pard\pardeftab720\sl560\sa108

\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************
\fs32 \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448
\cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448

\fs48 \cf7 \expnd0\expndtw0\kerning0
\ul \ulc7 Representational State Transfer (REST)
\fs32 \cf3 \ulnone \
\
Representational State Transfer (REST)
\b0 \expnd0\expndtw0\kerning0
 is the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Software_architecture_styles_and_patterns"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
software architectural style}} of the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/World_Wide_Web"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
World Wide Web}}.{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Taylor_2000-1"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\super [1]}}{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Richardson_2007-2"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\super [2]}}{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Richardson_2013-3"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\super [3]}} \
\
RESTful systems typically, but not always, communicate over the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Hypertext Transfer Protocol}} with the same {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_verbs"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
HTTP verbs}} (GET, POST, PUT, DELETE, etc.) which web browsers use to retrieve {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Web_page"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
web pages}} and to send data to remote servers\
\
\pard\pardeftab720\sl448\sa140
\cf3 \expnd0\expndtw0\kerning0
Web service APIs that adhere to the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
REST architectural constraints}} are called {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/w/index.php?title=RESTful_APIs&action=edit&redlink=1"}}{\fldrslt \cf8 \expnd0\expndtw0\kerning0
RESTful APIs}}. HTTP-based RESTful APIs are defined with these aspects:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls2\ilvl0\cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
base {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/URI"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
URI}}, such as \cf0 \cb9 \expnd0\expndtw0\kerning0
http://example.com/resources/\cf3 \cb1 \expnd0\expndtw0\kerning0
\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
an {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Internet_media_type"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Internet media type}} for the data. This is often {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/JSON"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
JSON}} but can be any other valid Internet media type (e.g., XML, Atom, microformats, images, etc.)\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
standard {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_method"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
HTTP methods}} (e.g., GET, PUT, POST, or DELETE)\
\pard\pardeftab720\sl448
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl765

\f1 \cf0 \expnd0\expndtw0\kerning0
RESTs sweet spot is when you are exposing a public API over the internet to handle CRUD operations on data. REST is focused on accessing named resources through a single consistent interface.\

\f0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448
\cf0 \expnd0\expndtw0\kerning0
Advantages of RESTful:\
\
\pard\pardeftab720\sl425
\cf3 \cb9 \expnd0\expndtw0\kerning0
REST's client\'96server separation of concerns simplifies component implementation, reduces the complexity of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Connector_(computer_science)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
connector}} semantics, improves the effectiveness of performance tuning, and increases the scalability of pure server components. \cf0 \cb1 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls3\ilvl0\cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Performance - component interactions can be the dominant factor in user-perceived performance and network efficiency.{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch2-7"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\super [7]}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls3\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Scalability"}}{\fldrslt \expnd0\expndtw0\kerning0
Scalability}}\cf3 \expnd0\expndtw0\kerning0
 to support large numbers of components and interactions among components. {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Roy_Fielding"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Roy Fielding}}, one of the principal authors of the HTTP specification, describes REST's effect on scalability thus:\
\pard\pardeftab720\sl448
\cf0 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa28
\ls4\ilvl0\cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Simplicity of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Interface_(computer_science)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
interfaces}}\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Modifiability of components to meet changing needs (even while the application is running)\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Visibility of communication between components by service agents\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Portability of components by moving program code with the data\
\pard\pardeftab720\sl540
\cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 \
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 WHY REST?\
Here are a few reasons why REST is almost always the right answer.\
Since REST uses standard HTTP it is much simpler in just about ever way. Creating clients, developing APIs, the documentation is much easier to understand and there aren\'92t very many things that REST doesn\'92t do easier/better than SOAP.\
REST permits many different data formats where as SOAP only permits XML. While this may seem like it adds complexity to REST because you need to handle multiple formats, in my experience it has actually been quite beneficial. JSON usually is a better fit for data and parses much faster. REST allows better support for browser clients due to it\'92s support for JSON.\
REST has better performance and scalability. REST reads can be cached, SOAP based reads cannot be cached.\
It\'92s a bad argument (by authority), but it\'92s worth mentioning that Yahoo uses REST for all their services including Flickr and del.ici.ous. Amazon and Ebay provide both though Amazon\'92s internal usage is nearly all REST {\field{\*\fldinst{HYPERLINK "http://www.oreillynet.com/pub/wlg/3005"}}{\fldrslt \cf11 \expnd0\expndtw0\kerning0
source}}. Google used to provide only SOAP for all their services, but in 2006 they deprecated in favor of REST {\field{\*\fldinst{HYPERLINK "http://code.google.com/apis/soapsearch/"}}{\fldrslt \cf11 \expnd0\expndtw0\kerning0
source}}. It\'92s interesting how there has been an internal battle between rest vs soap at amazon. For the most part REST dominates their architecture for web services.\
\pard\tx720\pardeftab720\sl448\sa28

\f0 \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl560\sa108

\b\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************\
\pard\pardeftab720\sl448

\b0\fs32 \cf3 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl448

\b\fs48 \cf12 \expnd0\expndtw0\kerning0
\ul \ulc12 JSON
\fs32 \ulnone \

\b0 \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448

\b \cf0 \expnd0\expndtw0\kerning0
JSON
\b0 \expnd0\expndtw0\kerning0
, (canonically pronounced {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Help:IPA_for_English"}}{\fldrslt \expnd0\expndtw0\kerning0
/\uc0\u712 d\u658 e\u618 s\u601 n/}} {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Wikipedia:Pronunciation_respelling_key"}}{\fldrslt 
\i\b \expnd0\expndtw0\kerning0
jay
\b0 \expnd0\expndtw0\kerning0
-s\uc0\u601 n}};{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/JSON#cite_note-Pronunciation-1"}}{\fldrslt \expnd0\expndtw0\kerning0
\super [1]}} sometimes 
\b \expnd0\expndtw0\kerning0
JavaScript Object Notation
\b0 \expnd0\expndtw0\kerning0
), is an {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Open_standard"}}{\fldrslt \expnd0\expndtw0\kerning0
open standard}} format that uses {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Human-readable"}}{\fldrslt \expnd0\expndtw0\kerning0
human-readable}}ctext to transmit data objects consisting of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair"}}{\fldrslt \expnd0\expndtw0\kerning0
attribute\'96value pairs}}. It is the primary data format used for asynchronous browser/server communication ({\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/AJAJ"}}{\fldrslt \expnd0\expndtw0\kerning0
AJAJ}}), largely replacing {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/XML"}}{\fldrslt \expnd0\expndtw0\kerning0
XML}} (used by {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Ajax_(programming)"}}{\fldrslt \expnd0\expndtw0\kerning0
AJAX}}).\
\cf12 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl560\sa108

\b\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************\
\pard\pardeftab720\sl448

\b0\fs32 \cf12 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448

\b\fs48 \cf13 \expnd0\expndtw0\kerning0
\ul \ulc13 SOAP
\b0\fs32 \cf3 \expnd0\expndtw0\kerning0
\ulnone \
\cf12 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448

\b \cf3 \expnd0\expndtw0\kerning0
SOAP
\b0 \expnd0\expndtw0\kerning0
, originally an acronym for 
\i \expnd0\expndtw0\kerning0
Simple Object Access Protocol
\i0 \expnd0\expndtw0\kerning0
, is a {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Protocol_(computing)"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
protocol}} specification for exchanging structured information in the implementation of {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Web_service"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
web services}} in {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Computer_network"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
computer networks}}. It uses {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/XML_Information_Set"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
XML Information Set}} for its message format, and relies on other {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Application_layer"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
application layer}} protocols, most notably {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Hypertext Transfer Protocol}} (HTTP) or {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Simple Mail Transfer Protocol}} (SMTP), for message negotiation and transmission.\cf12 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448
\cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl765

\f1 \cf0 \expnd0\expndtw0\kerning0
SOAP brings it\'92s own protocol and focuses on exposing pieces of application logic (not data) as services. SOAP exposes operations. SOAP is focused on accessing named operations, each implement some business logic through different interfaces.\
\
\pard\pardeftab720\sl765\sa403
\cf0 \expnd0\expndtw0\kerning0
By way of illustration here are few calls and their appropriate home with commentary.\
\pard\pardeftab720\sl400

\f0 \cf0 \cb14 \expnd0\expndtw0\kerning0
getUser(User);\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \cb1 \expnd0\expndtw0\kerning0
This is a rest operation as you are accessing a resource (data).\
\pard\pardeftab720\sl400

\f0 \cf0 \cb14 \expnd0\expndtw0\kerning0
switchCategory(User, OldCategory, NewCategory)\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \cb1 \expnd0\expndtw0\kerning0
This is a SOAP operation as you are performing an operation.\
Yes, either could be done in either SOAP or REST. The purpose is to illustrate the conceptual difference.\
\pard\pardeftab720\sl540

\f0 \cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 WHY Soap?\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 Here are a few reasons you may want to use SOAP.\
\pard\pardeftab720\sl540

\f0 \cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 Ws-Security\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 While SOAP supports SSL (just like REST) it also supports WS-Security which adds some enterprise security features. Supports identity through intermediaries, not just point to point (SSL). It also provides a standard implementation of data integrity and data privacy. Calling it \'93Enterprise\'94 isn\'92t to say it\'92s more secure, it simply supports some security tools that typical internet services have no need for, in fact they are really only needed in a few \'93enterprise\'94 scenarios.\
\pard\pardeftab720\sl540

\f0 \cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 Ws-Atomictransaction\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 Need ACID Transactions over a service, you\'92re going to need SOAP. While REST supports transactions, it isn\'92t as comprehensive and isn\'92t ACID compliant. Fortunately ACID transactions almost never make sense over the internet. REST is limited by HTTP itself which can\'92t provide two-phase commit across distributed transactional resources, but SOAP can. Internet apps generally don\'92t need this level of transactional reliability, enterprise apps sometimes do.\
\pard\pardeftab720\sl540

\f0 \cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 Ws-Reliablemessaging\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 Rest doesn\'92t have a standard messaging system and expects clients to deal with communication failures by retrying. SOAP has successful/retry logic built in and provides end-to-end reliability even through SOAP intermediaries.\
\pard\pardeftab720\sl540

\f0 \cf10 \expnd0\expndtw0\kerning0
\shad\shadx40\shady-40\shadr0\shado255 \shadc0 Summary\
\pard\pardeftab720\sl765\sa403

\f1 \cf0 \expnd0\expndtw0\kerning0
\shad0 In Summary, SOAP is clearly useful, and important. For instance, if I was writing an iPhone application to interface with my bank I would definitely need to use SOAP. All three features above are required for banking transactions. For example, if I was transferring money from one account to the other, I would need to be certain that it completed. Retrying it could be catastrophic if it succeed the first time, but the response failed\
\pard\pardeftab720\sl560\sa108

\f0\b\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************\
\pard\pardeftab720\sl765

\b0\fs32 \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl400

\b\fs48 \cf15 \expnd0\expndtw0\kerning0
\ul \ulc15  Secure Sockets Layer (SSL) 
\f1\b0\fs32 \cf16 \ulnone \

\f0 \cf3 \expnd0\expndtw0\kerning0
\

\f1 \cf16 \expnd0\expndtw0\kerning0
The Secure Sockets Layer (SSL) and Transport Layer Security (TLS) is the most widely deployed security protocol used today. It is essentially a protocol that provides a secure channel between two machines operating over the Internet or an internal network. In today\'92s Internet focused world, the SSL protocol is typically used when a web browser needs to securely connect to a web server over the inherently insecure Internet.
\f0 \cf3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl448
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa260

\f1 \cf17 \expnd0\expndtw0\kerning0
What is an SSL Certificate?\
\pard\pardeftab720\sl400
\cf16 \expnd0\expndtw0\kerning0
SSL Certificates are small data files that digitally bind a {\field{\*\fldinst{HYPERLINK "https://www.globalsign.com/en/ssl-information-center/choosing-safe-key-sizes/"}}{\fldrslt \cf18 \expnd0\expndtw0\kerning0
cryptographic key}} to an organization\'92s details. When installed on a web server, it activates the padlock and the https protocol (over port 443) and allows secure connections from a web server to a browser. Typically, {\field{\*\fldinst{HYPERLINK "https://www.globalsign.com/en/ssl-information-center/what-is-ssl/"}}{\fldrslt \cf18 \expnd0\expndtw0\kerning0
SSL}} is used to secure credit card transactions, data transfer and logins, and more recently is becoming the norm when securing browsing of social media sites. SSL Certificates bind together:\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa500
\ls5\ilvl0\cf16 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
A domain name, server name or hostname.\uc0\u8232 
\f0 \cf19 \expnd0\expndtw0\kerning0
\
\ls5\ilvl0
\f1 \cf16 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
An organizational identity (i.e. company name) and location.\uc0\u8232 
\f0 \cf19 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl400

\f1 \cf16 \expnd0\expndtw0\kerning0
An organization needs to install the SSL Certificate onto its web server to initiate secure sessions with browsers. Depending on the {\field{\*\fldinst{HYPERLINK "https://www.globalsign.com/en/ssl-information-center/types-of-ssl-certificate/"}}{\fldrslt \cf18 \expnd0\expndtw0\kerning0
type of SSL Certificate}} applied for, the organization will need to go through differing levels of vetting. Once installed, it is possible to connect to the website over https://www.domain.com, as this tells the server to establish a secure connection with the browser. Once a secure connection is established, all web traffic between the web server and the web browser will be secure. Browsers tell visitors a website is SSL secure via several visible trust indicators:\
\pard\pardeftab720\sl400
{\field{\*\fldinst{HYPERLINK "http://spf13.com/post/soap-vs-rest"}}{\fldrslt \cf16 \expnd0\expndtw0\kerning0
http://spf13.com/post/soap-vs-rest}}\
\
\pard\pardeftab720\sl560\sa108

\f0\b\fs48 \cf5 \expnd0\expndtw0\kerning0
************************************************************\
\pard\pardeftab720\sl400

\f1\b0\fs32 \cf16 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl1200\sa200

\f2\b\fs48 \cf20 \expnd0\expndtw0\kerning0
\ul \ulc20 Understanding XML and JSON Parsing in iOS Programming
\b0\fs96 \ulnone \
\pard\pardeftab720\sl400

\f1\fs32 \cf16 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl500

\f3 \cf17 \expnd0\expndtw0\kerning0
iOS SDK provides classes for handling both JSON and XML. For managing JSON data, there is the 
\i \expnd0\expndtw0\kerning0
NSJSONSerialization
\i0 \expnd0\expndtw0\kerning0
 class. This one allows to easily convert a JSON data into a Foundation object (NSArray, NSDictionary), and the other way round. For parsing XML data, iOS offers the 
\i \expnd0\expndtw0\kerning0
NSXMLParser 
\i0 \expnd0\expndtw0\kerning0
class, which takes charge of doing all the hard work, and through some useful delegate methods gives us the tools we need for handling each step of the parsing.
\f1 \cf16 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl400
{\field{\*\fldinst{HYPERLINK "http://www.appcoda.com/parse-xml-and-json-web-service/"}}{\fldrslt 
\f0 \cf0 \expnd0\expndtw0\kerning0
http://www.appcoda.com/parse-xml-and-json-web-service/}}
\f0 \cf0 \expnd0\expndtw0\kerning0
\
}